syntax = "proto3";

package employee_territory;

option go_package = "northwind/proto/employee_territory";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "typespb.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "northwind";
        version: "1.0";
        description: "Boilerplate code generated by xo-grpc. Modify proto/*.proto files then run 'compile.sh' script on proto directory to change the services interface.";
        contact: {
            name: "xo-grpc - Walter Wanderley";
            url: "https://github.com/walterwanderley/xo-grpc";
        };
    };
};
service EmployeeTerritory {
    
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/employee/{employeeID}/territory/{territoryID}/employee-territory"
            
        };
    }
    
    rpc Employee(EmployeeRequest) returns (typespb.Employee) {
        option (google.api.http) = {
            get: "/v1/employee/{employeeID}/territory/{territoryID}/employee-territory/employee"
            
        };
    }
    
    rpc EmployeeTerritoryByEmployeeIDTerritoryID(EmployeeTerritoryByEmployeeIDTerritoryIDRequest) returns (typespb.EmployeeTerritory) {
        option (google.api.http) = {
            get: "/v1/employee/{employeeID}/territory/{territoryID}/employee-territory"
            
        };
    }
    
    rpc Insert(InsertRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/employee/{employeeID}/territory/{territoryID}/employee-territory"
            
        };
    }
    
    rpc Territory(TerritoryRequest) returns (typespb.Territory) {
        option (google.api.http) = {
            get: "/v1/employee/{employeeID}/territory/{territoryID}/employee-territory/territory"
            
        };
    }
    
}

message DeleteRequest { 
    int32 employeeID = 1;
    string territoryID = 2;
}

message EmployeeRequest { 
    int32 employeeID = 1;
    string territoryID = 2;
}

message EmployeeTerritoryByEmployeeIDTerritoryIDRequest { 
    int32 employeeID = 1;
    string territoryID = 2;
}

message InsertRequest { 
    int32 employeeID = 1;
    string territoryID = 2;
}

message TerritoryRequest { 
    int32 employeeID = 1;
    string territoryID = 2;
}
