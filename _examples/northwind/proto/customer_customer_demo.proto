syntax = "proto3";

package customer_customer_demo;

option go_package = "github.com/walterwanderley/xo-grpc/_examples/northwind/proto/customer_customer_demo";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "typespb.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "github.com/walterwanderley/xo-grpc/_examples/northwind";
        version: "1.0";
        description: "Boilerplate code generated by xo-grpc. Modify proto/*.proto files then run 'compile.sh' script on proto directory to change the services interface.";
        contact: {
            name: "xo-grpc - Walter Wanderley";
            url: "https://github.com/walterwanderley/xo-grpc";
        };
    };
};
service CustomerCustomerDemoService {
    
    rpc Customer(CustomerRequest) returns (typespb.Customer) {
        option (google.api.http) = {
            get: "/v1/customer-customer-demo/customer/{CustomerID}"
            
        };
    }
    
    rpc CustomerCustomerDemoByCustomerIDCustomerTypeID(CustomerCustomerDemoByCustomerIDCustomerTypeIDRequest) returns (typespb.CustomerCustomerDemo) {
        option (google.api.http) = {
            get: "/v1/customer-customer-demo"
            
        };
    }
    
    rpc CustomerDemographic(CustomerDemographicRequest) returns (typespb.CustomerDemographic) {
        option (google.api.http) = {
            get: "/v1/customer-customer-demo/customer-demographic/{CustomerTypeID}"
            
        };
    }
    
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/customer-customer-demo"
            
        };
    }
    
    rpc Insert(InsertRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/customer-customer-demo"
            body: "*"
            
        };
    }
    
}

message CustomerRequest { 
    string CustomerID = 1;
}

message CustomerCustomerDemoByCustomerIDCustomerTypeIDRequest { 
    string customerID = 1;
    string customerTypeID = 2;
}

message CustomerDemographicRequest { 
    string CustomerTypeID = 1;
}

message DeleteRequest { 
    string CustomerID = 1;
    string CustomerTypeID = 2;
}

message InsertRequest { 
    string CustomerID = 1;
    string CustomerTypeID = 2;
}
